language: python
services:
  - docker
env:
  global:
    - KILI_API_ENDPOINT=https://staging.cloud.kili-technology.com/api/label/graphql
    - secure: "rINXbbklsZ+aWK7cB15BNYeShMGpeeCB7YtbtpYiPzpJogoIGiVtYHcBE4FUaGJn1Hc7SQuhc6FeWPgcMZ+jqGpd2Bp0wr9E9Yb277KwLezY//CEKxPtGcrb3rujJ1PUFBEuXIYzSCwoRZOIGNfugjYgoBK4dpRT8ZZ3DoherlvyvfkmxOmfyjeUw/d+hTgbNVCAeUKts2gt1ezET1xGiUlQOdjxSi74o4ctRMKOjYErnHQF2BipZkawktCudQ6s7hfUmqzELKAZaCd7aHyw6TEL86N7xh9r3zbTKBUUrMCv4bcynm1kAqQ5FEuSEMY2Ed3aO6VU0VkuqiGi76QugZrJYukeZQbGZV+ihCkqIeSbWuKu6TIVzRmS0J2VFew3bgdChJ2Pab+MakYE/L3lrjdhmrt+UMGW3fUfNLlVKbJyJKitbJpgofZTrPnra0zYt+Y4UBMDC4OBSE9wE9yZpe08rD4tOYaOnu7bvTFuAYqPpXLWgNMhX6Y2NlS/i45CWXMIgScktNUkZ+3nlEZZatvkUzOq829ttdl7yUN+JNPQT96/IftjHeDEQjRrKow/GJ1Hr9HZ911Xvs+Sys5ak0LwDbLx29A5aOdXZnKN4RVZQOJZDrIYSGfbgoMC4LFe46uOtdDqQuKEd4aczQcxxauKlSPdTNqmFy3wsMlRJH4="
    - secure: "VpGcLYmEf7nXVTtFKCaKWSooS+JB/Ei6deB5NHRe9LIwL7nQe0g6vrCezF0Z8o5yZd3ikjUzD5aWBXerY8X6z0MVwwNW7kLRaal7PzWHAOdwdrfs7G1oRNPSjVbwd/f9w7149gAAE71rOknh4BmOpeBxB/9DFltQkEkugVeG+H0zYmTtVC1sFC0JRzqMoCulJwJjALsA6SosJevtwA+SfOyOTMdhjxyQcCC6d0XiuwXlINEj4XpYdrHpd7HUtnGFOYJbDfBaMylne0fJZtxDYU8SQmplTDqh8OVruXm+YUfjMShMi942UuDItA0DBj5XKpfDxK7zqKqElSPGvbSteTSsA+SNO2yTW12WKOGGBcnXOS4yUrogr8axrl49/kdLI0fOcb3SZ4tGQrj0B5dELSu5Ijzr1Tmit6r2M6m3BhdcbYtvb2jFS00OcdWnTPFRxF+vQ6wYQAe6E4fnzFUNcqIGiJeTs8slSF2loeiN7Cev5rW+TzuJZLZULajPGPH6ku5FXXNm5K15cLxbpDrhXp1X1UoGvcnPSmlR5fBOygdlHV3VpZ6vztIvyiHTboV2V1wFRWL5qQbMLRXmPYXSsz38H9/U0JT9zmtVdl8sJn5do+oO2Nm3pWd2chWiDb5jZh2EXhzlg5RG+Yds8gbwjWci9Qov15UIuNpF+uiQFjU="
jobs:
  include:
    # To debug a recipe by running it in a Docker locally as it is run in Travis, launch the following lines:
    #
    # DOCKER_IMAGE=...
    # KILI_USER_EMAIL=...
    # KILI_USER_PASSWORD=...
    # TRAVIS_BRANCH=...
    #
    # docker pull ${DOCKER_IMAGE}
    #
    # docker run \
    #   --env KILI_API_ENDPOINT=https://staging.cloud.kili-technology.com/api/label/graphql \
    #   --env KILI_USER_EMAIL=${KILI_USER_EMAIL} \
    #   --env KILI_USER_PASSWORD=${KILI_USER_PASSWORD} \
    #   --rm \
    #   -p 10000:8888 \
    #   ${DOCKER_IMAGE} /bin/sh -c "cd /root && \
    #     apt-get install -y gcc && \
    #     git clone --branch ${TRAVIS_BRANCH} https://github.com/kili-technology/kili-playground.git && \
    #     pip install ./kili-playground && \
    #     jupyter notebook --allow-root --ip=0.0.0.0 --port=8888"
    #
    # Then start https://localhost:10000/?token=TOKEN_OUTPUTED_IN_CONSOLE
    - &test-recipes
      stage: Test *.ipynb in recipes
      script:
        - docker pull ${DOCKER_IMAGE}
        - |
          docker run \
            --env KILI_API_ENDPOINT=${KILI_API_ENDPOINT} \
            --env KILI_USER_EMAIL=${KILI_USER_EMAIL} \
            --env KILI_USER_PASSWORD=${KILI_USER_PASSWORD} \
            ${DOCKER_IMAGE} /bin/sh -c "cd /root && \
              apt-get install -y gcc && \
              git clone --branch ${TRAVIS_BRANCH} https://github.com/kili-technology/kili-playground.git && \
              pip install ./kili-playground && \
              jupyter nbconvert \
                --to notebook \
                --ExecutePreprocessor.kernel_name=python3 \
                --ExecutePreprocessor.timeout=500 \
                --execute /root/kili-playground/${NOTEBOOK_PATH}"
      env:
        - DOCKER_IMAGE=continuumio/anaconda3:2020.02
        - NOTEBOOK_PATH=recipes/image-object-detection-with-yolo/main.ipynb
    - <<: *test-recipes
      env:
        - DOCKER_IMAGE=continuumio/anaconda3:2020.02
        - NOTEBOOK_PATH=recipes/import_predictions.ipynb
    - <<: *test-recipes
      env:
        - DOCKER_IMAGE=continuumio/anaconda3:2020.02
        - NOTEBOOK_PATH=recipes/create_project.ipynb
    - <<: *test-recipes
      env:
        - DOCKER_IMAGE=continuumio/anaconda3:2020.02
        - NOTEBOOK_PATH=recipes/query_methods.ipynb
    # Declare other tests as follow:
    # - <<: *test-recipes
    #   env:
    #     - DOCKER_IMAGE=docker/image
    #     - NOTEBOOK_PATH=recipes/path/to.ipynb
