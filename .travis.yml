language: python
services:
  - docker
env:
  global:
    - KILI_API_ENDPOINT=https://staging.cloud.kili-technology.com/api/label/graphql
    - secure: "Z+AWg4a7e222knnfwjS6qIOqaClifZ27N6xYl/pbardFmUy8OWxePRnTOTR1+94Lr0ZpTlNcDfPw5Edm7XxdRUcHEzWKzGdoYBHY3A+MpXpbFpQVa8NelUfXo8zRai25ulv3JIDNdvC7bvxfdHThau6vv+ir4qelSVnjlRnnjo/dqx0guOZC4LVIRtsuI6Gm5w1no54KTDsLTeKrtL65nKwz/LPPUSE8BTXcZTe+i34jSnFYRr45M8TK9zfhccxI4sGVM5PfyARGoxOoGSY9N2bl97qrXsiW15hxFyrS+O3x3i6Ne3GP7SGX5m3WGBFmJoh5hkJllIwl2XEKYGSofjMgdcPZLlPcEBgeX0Vyijt265ZPH3mINSCiLW/v4dLFt2T4DVr9o/Wxt80uu+vEvXk7PZnXlSmzyQknvOmYkBDBrq7tRAVsRcRHrewmmf2RJR4Cdc7ytiAJ4u3tyug9ytbeVurds2eQL1Ab3/dXk7Ie91J/k6nw/VtiDPQ8WDtMPD1seZHTuPcmbwZz2Rs60j80eqcnqjxLYMn/gB6b6A/OqXgomjOdqKJ8u4NHe0XuWmlQT7P8YQ3O/O6BUPmdh2FSATJ+CvACZEBPGWL/bAnndJDKOkjV4s1wKLttrhFSOSSwezAcVVGVT2OKm08Xy/OSv10HIJsgwzc+mQiaxOE="
    - secure: "SJsj/oCtiaom9k45+is7bIRhnTe3kgNTJ12lD5oKAqfm7Iz+cBw9zuvkl208sE62Ujq65plt8ekcPtO16+CnOCg6mGgY1Gsj8vTEcW5C7nYPMmCfporXVbWZlrKjOqWp+c/LbP4YIY7NA8FovnBDl3Jp85s+6TOaNIvbNt1RK4kQTtddc6UFhpKtZfiRy4St1IwD5OiShaQUyQIS/vOKqlbqrLO7b+XDLQB/uCtxqVlfq1vxA0K2/8qn0u2xSA+Wvy+8u15zlhnjzUQvDVNbZVElK0bROn6q6bk/EpTVaT8bDb8SZiGEl+klhhSt9s0RzB1GpRj4JBWM3c3qhznSfnYs6q7e/pRvr/Ho/gIgivUVwNuShEuiAGqTZZzSySB6cwyJeRC/hhp7Gxo6wcj8nCIuiajxgJXujFyejiSmWxVilv4YkzTxlw8FIo5A6lCnCP8mTj61EA9LFV+JsN956afeEVX7i78+/Wx8C3u4dqFZOPdhUJJUXGmQZ1akQGs8pWMvibckyd/4318MF211w5Za/mSSB4JcCmxIUWqEjQHXEw64zCrzmO3z1ssiuSqvUPdNeWaATtzGSmD05Qaxj7xPbyp3WPB9Z6nejQVj9htbgwg44Tgt5hVbQimsUoRh9JojP/5J5dnKWjIBBTcdWSzOzT1wFBZtO4MK/IVoSwI="
jobs:
  include:
    # To debug a recipe by running it in a Docker locally as it is run in Travis, launch the following lines:
    #
    # DOCKER_IMAGE=...
    # KILI_USER_EMAIL=...
    # KILI_USER_PASSWORD=...
    # TRAVIS_BRANCH=...
    #
    # docker pull ${DOCKER_IMAGE}
    #
    # docker run \
    #   --env KILI_API_ENDPOINT=https://staging.cloud.kili-technology.com/api/label/graphql \
    #   --env KILI_USER_EMAIL=${KILI_USER_EMAIL} \
    #   --env KILI_USER_PASSWORD=${KILI_USER_PASSWORD} \
    #   --rm \
    #   -p 10000:8888 \
    #   ${DOCKER_IMAGE} /bin/sh -c "cd /root && \
    #     apt-get install -y gcc && \
    #     git clone --branch ${TRAVIS_BRANCH} https://github.com/kili-technology/kili-playground.git && \
    #     pip install ./kili-playground && \
    #     jupyter notebook --allow-root --ip=0.0.0.0 --port=8888"
    #
    # Then start https://localhost:10000/?token=TOKEN_OUTPUTED_IN_CONSOLE
    - &test-recipes
      stage: Test *.ipynb in recipes
      script:
        - docker pull ${DOCKER_IMAGE}
        - |
          docker run \
            --env KILI_API_ENDPOINT=${KILI_API_ENDPOINT} \
            --env KILI_USER_EMAIL=${KILI_USER_EMAIL} \
            --env KILI_USER_PASSWORD=${KILI_USER_PASSWORD} \
            ${DOCKER_IMAGE} /bin/sh -c "cd /root && \
              apt-get install -y gcc && \
              git clone --branch ${TRAVIS_BRANCH} https://github.com/kili-technology/kili-playground.git && \
              pip install ./kili-playground && \
              jupyter nbconvert \
                --to notebook \
                --ExecutePreprocessor.kernel_name=python3 \
                --ExecutePreprocessor.timeout=500 \
                --execute /root/kili-playground/${NOTEBOOK_PATH}"
      env:
        - DOCKER_IMAGE=continuumio/anaconda3:2020.02
        - NOTEBOOK_PATH=recipes/image-object-detection-with-yolo/main.ipynb
    - <<: *test-recipes
      env:
        - DOCKER_IMAGE=continuumio/anaconda3:2020.02
        - NOTEBOOK_PATH=recipes/import_predictions.ipynb
    - <<: *test-recipes
      env:
        - DOCKER_IMAGE=continuumio/anaconda3:2020.02
        - NOTEBOOK_PATH=recipes/create_project.ipynb
    - <<: *test-recipes
      env:
        - DOCKER_IMAGE=continuumio/anaconda3:2020.02
        - NOTEBOOK_PATH=recipes/query_methods.ipynb
    # Declare other tests as follow:
    # - <<: *test-recipes
    #   env:
    #     - DOCKER_IMAGE=docker/image
    #     - NOTEBOOK_PATH=recipes/path/to.ipynb
