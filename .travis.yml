language: python
services:
  - docker
env:
  global:
    - KILI_API_ENDPOINT=https://staging.cloud.kili-technology.com/api/label/graphql
    - secure: "l9o1BMB6MFXEeRR3sZ7I3Ti+FVDcX8nHPQK4aDFNGPpfco9ci5BiHnt5ZbgDiQrQK8k2U87hygVFB8zmJ3jupuHJSIBWjfMraYuS0g8W4wJfvFQr/ERkQ50zLuh0Kk9XjPlkSsSOf7YC+QPp/2k9c+fv3mZ0gg4xmWi4FmMmi1/XTxNJqz0HNbgKg1mdqz5wx8+jk62bSMyEKSkbr5nNKKDmhv9p1Cx3LdoEccTIUiOoAap+TPpK1qmlw9hr/evFMGD/3mVcnstpCc+8amasWcHXJ8QjwbnR9oW1IbFvNjj3ku3pXMkJGbmhKLKxm3278jOBlig69e7MaGlMptGnb3PyWR1m2sBCEsfasJS7SdIR/BD82i6EExfCpqpuw/dEjre1e/QkDHQXZHe4QIwGnUeSczaFU7X17btvI2QgF5TmJnxbdhPgcjI2rp8XAC627j03+ZQ9bAOuza/yT4TtLCSMBqfvTyUxCDvGLRk6nBIWdjjORsN3PPdVQpEeJUAE9FvbJAGv7Mp4qN6tn8NjJGHmwRAuODqn+pWrH0JvsOMm+0v7YRf0NvLzWVvkqlQIxy3O2jzr0Sx0UdHFK1fhvunhOyyXfHjhKrIYoP0xtKYKGe4/Nv7ZdxCiFMTjsTt2p/dCiv38ddQtxiNbq1iKMM7teq/gsTI6rdP53VXiiIg="
    - secure: "QYlnkiOAYcocBEF2RW5NXaRCZVZsUDlbPFlAr1yYrPFFtg/VqFhgbJO9dhgMJ+OFZTbHKm8lVEmf0LyExKZ8KJcbOnax+0YQTBGIPb9TuX2wfuL8/2nDi0SxFnYdg3iWWGRVeeNuh7rBniyCqhValMZ4lVMzPvpRi0K0V71e81Uc7VNsX/vcsdofnS8RqkFAh4VFw4izzJXUSXM64tyIDVKgd0SPH4Q4XOowpfuCIEhJZdmrilc5xjQ8VQsPDwYWkN7XiTIw1ld/aTsPctiNnZDbpH19Kz8l6Tgjos1VjYg516TuxxB0Gtauj/ehyRvO3qLjvM/2Tuia0MlJzu9mfgCAG6aQzA8QY6UOhSqOycu9QF8ezOYhqxQzBWHKKNkQN+zNJop/4C9Axm5l0ppL2w1ZIdVaVG2hBo654S9OTWw1JUj5cUhzo2jtExeQVd29laWeDMiXC+/Mvn1mvqlFEXSNNLEBAXwtpeHyPKh7DZsh33lUVqL6J9JFRkX+9BE1Ui7ntPUf5tq+QixsNfZCGPq1IwHi9Oap4zL2/fjPxueysPxUX1DM6sbAp9R/PLSOZ5GE8Gn0/rv1m7zZvQ99iA/JW4cNqKLyXfWQED0yWhkWmeQ7bsbTKFaNKBROfiHxkl/3B0avhx4E2JwrIsyQU0/Az7xGhdYN3/Rf1XaK2Hw="
jobs:
  include:
    # To debug a recipe by running it in a Docker locally as it is run in Travis, launch the following lines:
    #
    # DOCKER_IMAGE=...
    # KILI_USER_EMAIL=...
    # KILI_USER_PASSWORD=...
    # TRAVIS_BRANCH=...
    #
    # docker pull ${DOCKER_IMAGE}
    #
    # docker run \
    #   --env KILI_API_ENDPOINT=https://staging.cloud.kili-technology.com/api/label/graphql \
    #   --env KILI_USER_EMAIL=${KILI_USER_EMAIL} \
    #   --env KILI_USER_PASSWORD=${KILI_USER_PASSWORD} \
    #   --rm \
    #   -p 10000:8888 \
    #   ${DOCKER_IMAGE} /bin/sh -c "cd /root && \
    #     apt-get install -y gcc && \
    #     git clone --branch ${TRAVIS_BRANCH} https://github.com/kili-technology/kili-playground.git && \
    #     pip install ./kili-playground && \
    #     jupyter notebook --allow-root --ip=0.0.0.0 --port=8888"
    #
    # Then start https://localhost:10000/?token=TOKEN_OUTPUTED_IN_CONSOLE
    - &test-recipes
      stage: Test *.ipynb in recipes
      script:
        - docker pull ${DOCKER_IMAGE}
        - |
          docker run \
            --env KILI_API_ENDPOINT=${KILI_API_ENDPOINT} \
            --env KILI_USER_EMAIL=${KILI_USER_EMAIL} \
            --env KILI_USER_PASSWORD=${KILI_USER_PASSWORD} \
            ${DOCKER_IMAGE} /bin/sh -c "cd /root && \
              apt-get install -y gcc && \
              git clone --branch ${TRAVIS_BRANCH} https://github.com/kili-technology/kili-playground.git && \
              pip install ./kili-playground && \
              jupyter nbconvert \
                --to notebook \
                --ExecutePreprocessor.kernel_name=python3 \
                --ExecutePreprocessor.timeout=500 \
                --execute /root/kili-playground/${NOTEBOOK_PATH}"
      env:
        - DOCKER_IMAGE=continuumio/anaconda3:2020.02
        - NOTEBOOK_PATH=recipes/image-object-detection-with-yolo/main.ipynb
    - <<: *test-recipes
      env:
        - DOCKER_IMAGE=continuumio/anaconda3:2020.02
        - NOTEBOOK_PATH=recipes/import_predictions.ipynb
    - <<: *test-recipes
      env:
        - DOCKER_IMAGE=continuumio/anaconda3:2020.02
        - NOTEBOOK_PATH=recipes/create_project.ipynb
    # Declare other tests as follow:
    # - <<: *test-recipes
    #   env:
    #     - DOCKER_IMAGE=docker/image
    #     - NOTEBOOK_PATH=recipes/path/to.ipynb
